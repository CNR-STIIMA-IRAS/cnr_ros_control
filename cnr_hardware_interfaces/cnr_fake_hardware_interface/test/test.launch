<launch>

<arg name="valgrind" default="false" />
<arg name="debug" default="false" />

<group ns="file_and_screen_different_appenders" >
<rosparam>
  appenders: [file, screen]
  levels: [debug, info]
  file_name: "ciao"
</rosparam>
</group>

<group ns="ur10_hw" >
<rosparam>
  type: cnr/control/FakeRobotHW
  appenders: [file, screen]
  levels: [trace, info]
  pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%50M:%04L][%24c] %m%n"
  file_name: "ur10_hw"
  joint_names:
  - ur10_shoulder_pan_joint
  - ur10_shoulder_lift_joint
  - ur10_elbow_joint
  - ur10_wrist_1_joint
  - ur10_wrist_2_joint
  - ur10_wrist_3_joint
  base_link: ur10_base_link
  tool_link: ur10_tool0
  robot_description_param: /robot_description
  robot_description_planning_param: /robot_description_planning

  initial_position: [0, -1.57, 0, 0, 0, 0]
  fake_controller:
    type: cnr/control/JointStatePublisher
    controlled_joint:
    - ur10_shoulder_pan_joint
    - ur10_shoulder_lift_joint
    - ur10_elbow_joint
    - ur10_wrist_1_joint
    - ur10_wrist_2_joint
    - ur10_wrist_3_joint
</rosparam>
</group>

<include file="$(find ur_description)/launch/ur10_upload.launch"/>


<group if="$(arg valgrind)">
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix"
      value="valgrind -v --track-origins=yes --tool=memcheck --leak-check=full --show-reachable=yes  --num-callers=20 --track-fds=yes  --log-file=/home/feymann/a.txt" />
  <test launch-prefix="$(arg launch_prefix)" test-name="cnr_fake_hardware_interface_test"
          pkg="cnr_fake_hardware_interface" type="cnr_fake_hardware_interface_test"/>

</group>

<group unless="$(arg valgrind)">
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <test launch-prefix="$(arg launch_prefix)" test-name="cnr_fake_hardware_interface_test"
          pkg="cnr_fake_hardware_interface" type="cnr_fake_hardware_interface_test"/>
</group>

</launch>
